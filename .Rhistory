E4N100 <- SumClusterSize(E4N100)
E4Z001 <- SumClusterSize(E4Z001)
E4Z010 <- SumClusterSize(E4Z010)
E4Z025 <- SumClusterSize(E4Z025)
E4Z050 <- SumClusterSize(E4Z050)
E4Z100 <- SumClusterSize(E4Z100)
# Creation of Comparison Dataframes
E4N010vsZ001 <- ComparisonFunction(E4N010, E4Z001)
E4Z001vsZ100 <- ComparisonFunction(E4Z001, E4Z100)
E4N010vsN100 <- ComparisonFunction(E4N010, E4N100)
E4Z050vsZ100 <- ComparisonFunction(E4Z050, E4Z100)
E4Z100vsN100 <- ComparisonFunction(E4Z100, E4N100)
E4Z010vsN010 <- ComparisonFunction(E4Z010, E4N010)
# Volcanoes
pdf("E4Volcanoes.pdf")
EnhancedVolcano(E4N010vsZ001, lab = rownames(E4N010vsZ001), x = "LogClusterSize", y = "pvalue", title = "N010 vs. Z001", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylab = bquote(~-Log[10] ~ "p-value BH-Corrected"), ylim = c(0, 3))
EnhancedVolcano(E4Z001vsZ100, lab = rownames(E4Z001vsZ100), x = "LogClusterSize", y = "pvalue", title = "Z001 vs. Z100", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylab = bquote(~-Log[10] ~ "p-value BH-Corrected"), ylim = c(0, 3))
EnhancedVolcano(E4N010vsN100, lab = rownames(E4N010vsN100), x = "LogClusterSize", y = "pvalue", title = "N010 vs. N100", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylab = bquote(~-Log[10] ~ "p-value BH-Corrected"), ylim = c(0, 3))
EnhancedVolcano(E4Z050vsZ100, lab = rownames(E4Z050vsZ100), x = "LogClusterSize", y = "pvalue", title = "Z050 vs. Z100", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylab = bquote(~-Log[10] ~ "p-value BH-Corrected"), ylim = c(0, 3))
EnhancedVolcano(E4Z100vsN100, lab = rownames(E4Z100vsN100), x = "LogClusterSize", y = "pvalue", title = "Z100 vs. N100", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylab = bquote(~-Log[10] ~ "p-value BH-Corrected"), ylim = c(0, 3))
dev.off()
# Read in CSV Files of E5 Cluster Size for EAch Trial and E5 Cluster Medians
E5SplitClusterSizeTrials <- read.csv("/Users/jonathanyu/Documents/MATLAB/SWIFTV5_20210910/Trial1-10-25-2021-TimeCourseE5/E5All_cct.fcs_Template/E5All_cct.Split_Fractional_Cluster_Sizes.csv")
E5SplitClusterValuesTrials <- read.csv("/Users/jonathanyu/Documents/MATLAB/SWIFTV5_20210910/Trial1-10-25-2021-TimeCourseE5/E5All_cct.fcs_Template/E5All_cct.Split_Medians.csv")
E5
for(group in groups){
assign(paste0("E5", group), selectGroups(group, E5SplitClusterSizeTrials))
}
E5Groups <- list(E5N010, E5N100, E5Z001, E5Z010, E5Z025, E5Z050, E5Z100)
# Create lapply statement or for loop that loops the SumClusterSize Column addition...
# Create SumClusterSize Column in Each E5Group DF
E5N010 <- SumClusterSize(E5N010)
E5N100 <- SumClusterSize(E5N100)
E5Z001 <- SumClusterSize(E5Z001)
E5Z010 <- SumClusterSize(E5Z010)
E5Z025 <- SumClusterSize(E5Z025)
E5Z050 <- SumClusterSize(E5Z050)
E5Z100 <- SumClusterSize(E5Z100)
# Creation of Comparison Dataframes
E5N010vsZ001 <- ComparisonFunction(E5N010, E5Z001)
E5Z001vsN010 <- ComparisonFunction(E5Z001, E5N010)
E5Z001vsZ100 <- ComparisonFunction(E5Z001, E5Z100)
E5N010vsN100 <- ComparisonFunction(E5N010, E5N100)
E5N100vsN010 <- ComparisonFunction(E5N100, E5N010)
E5Z050vsZ100 <- ComparisonFunction(E5Z050, E5Z100)
E5Z100vsN100 <- ComparisonFunction(E5Z100, E5N100)
E5Z010vsN010 <- ComparisonFunction(E5Z010, E5N010)
# Volcanoes
pdf("E5Volcanoes.pdf")
EnhancedVolcano(E5N010vsZ001, lab = rownames(E5N010vsZ001), x = "LogClusterSize", y = "pvalue", title = "N010 vs. Z001", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
EnhancedVolcano(E5Z001vsN010, lab = rownames(E5Z001vsN010), x = "LogClusterSize", y = "pvalue", title = "Z001 vs N010", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
EnhancedVolcano(E5Z001vsZ100, lab = rownames(E5Z001vsZ100), x = "LogClusterSize", y = "pvalue", title = "Z001 vs. Z100", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
EnhancedVolcano(E5N010vsN100, lab = rownames(E5N010vsN100), x = "LogClusterSize", y = "pvalue", title = "N010 vs. N100", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
EnhancedVolcano(E5Z050vsZ100, lab = rownames(E5Z050vsZ100), x = "LogClusterSize", y = "pvalue", title = "Z050 vs. Z100", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
EnhancedVolcano(E5Z100vsN100, lab = rownames(E5Z100vsN100), x = "LogClusterSize", y = "pvalue", title = "Z100 vs. N100", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
dev.off()
E4Flow <- read.csv("/Users/jonathanyu/Documents/MATLAB/SWIFTV5_20210910/Trial1-9-27-2021-TimeCourseE4/Trial1-9-27-2021-TimeCourseE4.Split_Medians.csv")
E5Flow <- read.csv("/Users/jonathanyu/Documents/MATLAB/SWIFTV5_20210910/Trial1-10-25-2021-TimeCourseE5/E5All_cct.fcs_Template/E5All_cct.Split_Medians.csv")
E4E5Flow <- read.csv("/Users/jonathanyu/Documents/MATLAB/SWIFTV5_20210910/11-21-21CCTE4E5Each/11-21-21CCTE4E5Each.Split_Medians.csv")
for(group in groups){
assign(paste0("E5Val", group), selectGroups(group, E5Flow))
}
for(group in groups){
assign(paste0("E4Val", group), selectGroups(group, E4Flow))
}
for(group in groups){
assign(paste0("E4E5Val", group), selectGroups(group, E4E5Flow))
}
dimgroups <- list("Dim01", "Dim02", "Dim03", "Dim04", "Dim05", "Dim06", "Dim07", "Dim08", "Dim09", "Dim10", "Dim11", "Dim12", "Dim13", "Dim14","Dim15", "Dim16", "Dim17")
for(group in dimgroups){
assign(paste0("E4Val", group), selectGroups(group, E4Flow))
}
dimgroupsE5 <- list("Dim01", "Dim02", "Dim03", "Dim04", "Dim05", "Dim06", "Dim07", "Dim08", "Dim09", "Dim10", "Dim11", "Dim12", "Dim13")
for(group in dimgroupsE5){
assign(paste0("E5Val", group), selectGroups(group, E5Flow))
}
# Getting means of each reading of each dimension for E4 in each cluster
E4ValDim01$means <- rowMeans(E4ValDim01)
E4ValDim02$means <- rowMeans(E4ValDim02)
E4ValDim03$means <- rowMeans(E4ValDim03)
E4ValDim04$means <- rowMeans(E4ValDim04)
E4ValDim05$means <- rowMeans(E4ValDim05)
E4ValDim06$means <- rowMeans(E4ValDim06)
E4ValDim07$means <- rowMeans(E4ValDim07)
E4ValDim08$means <- rowMeans(E4ValDim08)
E4ValDim09$means <- rowMeans(E4ValDim09)
E4ValDim10$means <- rowMeans(E4ValDim10)
E4ValDim11$means <- rowMeans(E4ValDim11)
E4ValDim12$means <- rowMeans(E4ValDim12)
E4ValDim13$means <- rowMeans(E4ValDim13)
E4ValDim14$means <- rowMeans(E4ValDim14)
E4ValDim15$means <- rowMeans(E4ValDim15)
E4ValDim16$means <- rowMeans(E4ValDim16)
E4ValDim17$means <- rowMeans(E4ValDim17)
# Getting means of each reading of each dimension for E5 in each cluster
E5ValDim01$means <- rowMeans(E5ValDim01)
E5ValDim02$means <- rowMeans(E5ValDim02)
E5ValDim03$means <- rowMeans(E5ValDim03)
E5ValDim04$means <- rowMeans(E5ValDim04)
E5ValDim05$means <- rowMeans(E5ValDim05)
E5ValDim06$means <- rowMeans(E5ValDim06)
E5ValDim07$means <- rowMeans(E5ValDim07)
E5ValDim08$means <- rowMeans(E5ValDim08)
E5ValDim09$means <- rowMeans(E5ValDim09)
E5ValDim10$means <- rowMeans(E5ValDim10)
E5ValDim11$means <- rowMeans(E5ValDim11)
E5ValDim12$means <- rowMeans(E5ValDim12)
E5ValDim13$means <- rowMeans(E5ValDim13)
E4Valdimgroups <- list(E4ValDim01$means, E4ValDim02$means, E4ValDim03$means, E4ValDim04$means, E4ValDim05$means, E4ValDim06$means, E4ValDim07$means, E4ValDim08$means, E4ValDim09$means, E4ValDim10$means, E4ValDim11$means, E4ValDim12$means, E4ValDim13$means, E4ValDim14$means,E4ValDim15$means, E4ValDim16$means, E4ValDim17$means)
E5Valdimgroups <- list(E5ValDim01$means, E5ValDim02$means, E5ValDim03$means, E5ValDim04$means, E5ValDim05$means, E5ValDim06$means, E5ValDim07$means, E5ValDim08$means, E5ValDim09$means, E5ValDim10$means, E5ValDim11$means, E5ValDim12$means, E5ValDim13$means, E5ValDim14$means,E5ValDim15$means, E5ValDim16$means, E5ValDim17$means)
E5Valdimgroups <- list(E5ValDim01$means, E5ValDim02$means, E5ValDim03$means, E5ValDim04$means, E5ValDim05$means, E5ValDim06$means, E5ValDim07$means, E5ValDim08$means, E5ValDim09$means, E5ValDim10$means, E5ValDim11$means, E5ValDim12$means, E5ValDim13$means)
dimgroups <- list("Dim01", "Dim02", "Dim03", "Dim04", "Dim05", "Dim06", "Dim07", "Dim08", "Dim09", "Dim10", "Dim11", "Dim12", "Dim13", "Dim14","Dim15", "Dim16", "Dim17")
for(group in dimgroups){
assign(paste0("E4Val", group), selectGroups(group, E4Flow))
}
dimgroupsE5 <- list("Dim01", "Dim02", "Dim03", "Dim04", "Dim05", "Dim06", "Dim07", "Dim08", "Dim09", "Dim10", "Dim11", "Dim12", "Dim13")
for(group in dimgroupsE5){
assign(paste0("E5Val", group), selectGroups(group, E5Flow))
}
# Getting means of each reading of each dimension for E4 in each cluster
E4ValDim01$means <- rowMeans(E4ValDim01)
E4ValDim02$means <- rowMeans(E4ValDim02)
E4ValDim03$means <- rowMeans(E4ValDim03)
E4ValDim04$means <- rowMeans(E4ValDim04)
E4ValDim05$means <- rowMeans(E4ValDim05)
E4ValDim06$means <- rowMeans(E4ValDim06)
E4ValDim07$means <- rowMeans(E4ValDim07)
E4ValDim08$means <- rowMeans(E4ValDim08)
E4ValDim09$means <- rowMeans(E4ValDim09)
E4ValDim10$means <- rowMeans(E4ValDim10)
E4ValDim11$means <- rowMeans(E4ValDim11)
E4ValDim12$means <- rowMeans(E4ValDim12)
E4ValDim13$means <- rowMeans(E4ValDim13)
E4ValDim14$means <- rowMeans(E4ValDim14)
E4ValDim15$means <- rowMeans(E4ValDim15)
E4ValDim16$means <- rowMeans(E4ValDim16)
E4ValDim17$means <- rowMeans(E4ValDim17)
# Getting means of each reading of each dimension for E5 in each cluster
E5ValDim01$means <- rowMeans(E5ValDim01)
E5ValDim02$means <- rowMeans(E5ValDim02)
E5ValDim03$means <- rowMeans(E5ValDim03)
E5ValDim04$means <- rowMeans(E5ValDim04)
E5ValDim05$means <- rowMeans(E5ValDim05)
E5ValDim06$means <- rowMeans(E5ValDim06)
E5ValDim07$means <- rowMeans(E5ValDim07)
E5ValDim08$means <- rowMeans(E5ValDim08)
E5ValDim09$means <- rowMeans(E5ValDim09)
E5ValDim10$means <- rowMeans(E5ValDim10)
E5ValDim11$means <- rowMeans(E5ValDim11)
E5ValDim12$means <- rowMeans(E5ValDim12)
E5ValDim13$means <- rowMeans(E5ValDim13)
E4Valdimgroups <- list(E4ValDim01$means, E4ValDim02$means, E4ValDim03$means, E4ValDim04$means, E4ValDim05$means, E4ValDim06$means, E4ValDim07$means, E4ValDim08$means, E4ValDim09$means, E4ValDim10$means, E4ValDim11$means, E4ValDim12$means, E4ValDim13$means, E4ValDim14$means,E4ValDim15$means, E4ValDim16$means, E4ValDim17$means)
E5Valdimgroups <- list(E5ValDim01$means, E5ValDim02$means, E5ValDim03$means, E5ValDim04$means, E5ValDim05$means, E5ValDim06$means, E5ValDim07$means, E5ValDim08$means, E5ValDim09$means, E5ValDim10$means, E5ValDim11$means, E5ValDim12$means, E5ValDim13$means)
E4ValsMerged <- do.call("cbind", E4Valdimgroups)
E4ValsMerged <- as.data.frame((E4ValsMerged))
E4ValsMerged$SplitCluster <- E4ValDim01$SplitCluster.
E4ValsMerged <- na.omit(E4ValsMerged)
E4ValsMerged
E5ValsMerged <- do.call("cbind", E5Valdimgroups)
E5ValsMerged <- as.data.frame((E5ValsMerged))
E5ValsMerged$SplitCluster <- E5ValDim01$SplitCluster.
E5ValsMerged <- na.omit(E5ValsMerged)
E5ValsMerged
E4Z100vsN100SigClusters <- subset(E4Z100vsN100, (pvalue <= 0.05) & (LogClusterSize >= 1 | LogClusterSize <= -1))
E4N010vsZ001SigClusters <- subset(E4N010vsZ001, (pvalue <= 0.01) & (LogClusterSize >= 4 | LogClusterSize <= -4))
E4N010vsN100SigClusters <- subset(E4N010vsN100, (pvalue <= 0.05) & (LogClusterSize >= 1 | LogClusterSize <= -1))
E4Z010vsN010SigClusters <- subset(E4Z010vsN010, (pvalue <= 0.05) & (LogClusterSize >= 1 | LogClusterSize <= -1))
E4ValZ100N100 <- (E4ValN100[E4Z100vsN100SigClusters$SplitCluster,])
E4ValZ001N010 <- (E4ValZ001[E4N010vsZ001SigClusters$SplitCluster,])
E4ValN010N100 <- (E4ValN010[E4N010vsN100SigClusters$SplitCluster,])
E4ValZ010N010 <- (E4ValZ010[E4Z010vsN010SigClusters$SplitCluster,])
(head(E4ValN010N100))
(head(E4ValZ100N100))
(head(E4ValZ001N010))
headernames <- list( "FSC-A", "FSC-H", "FSC-W", "SSC-A", "SSC-H", "SSC-W", "CCR2", "Ly6G", "CD204", "Ghost510", "Cd11b", "MHCII", "Tim4", "APCeF780", "MerTK", "CD19", "CD73", "Cluster")
colnames(E4ValsMerged) <- headernames
# Z100 vs N100
E4ValsMergedZ100N100 <- merge(E4ValsMerged, E4ValZ100N100, by.x = "Cluster", by.y = "SplitCluster.")
E4ValsMergedZ100N100[,2:18] <- log(E4ValsMergedZ100N100[,2:18])
E4ValsMergedZ100N100 <- na.omit(E4ValsMergedZ100N100)
rownames(E4ValsMergedZ100N100) <- E4ValsMergedZ100N100$Cluster
# N010 vs Z001
E4ValsMergedZ001N010 <- merge(E4ValsMerged, E4ValZ001N010, by.x = "Cluster", by.y = "SplitCluster.")
E4ValsMergedZ001N010[,2:18] <- log(E4ValsMergedZ001N010[,2:18])
E4ValsMergedZ001N010 <- na.omit(E4ValsMergedZ001N010)
rownames(E4ValsMergedZ001N010) <- E4ValsMergedZ001N010$Cluster
# N010 vs N100
E4ValsMergedN010N100 <- merge(E4ValsMerged, E4ValN010N100, by.x = "Cluster", by.y = "SplitCluster.")
E4ValsMergedN010N100[,2:18] <- log(E4ValsMergedN010N100[,2:18])
E4ValsMergedN010N100 <- na.omit(E4ValsMergedN010N100)
rownames(E4ValsMergedN010N100) <- E4ValsMergedN010N100$Cluster
# Z010 vs N010
E4ValsMergedZ010N010 <- merge(E4ValsMerged, E4ValZ010N010, by.x = "Cluster", by.y = "SplitCluster.")
E4ValsMergedZ010N010[,2:18] <- log(E4ValsMergedZ010N010[,2:18])
E4ValsMergedZ010N010 <- na.omit(E4ValsMergedZ010N010)
rownames(E4ValsMergedZ010N010) <- E4ValsMergedZ010N010$Cluster
pdf("E4Heatmaps.pdf")
pheatmap(E4ValsMergedN010N100[,8:18], main = "N010 vs N100")
pheatmap(E4ValsMergedZ100N100[,8:18], main = "Z100 vs N100")
pheatmap(E4ValsMergedZ001N010[,8:18], main = "Z001 vs N010")
pheatmap(E4ValsMergedZ010N010[,8:18], main = "Z010 vs N010")
dev.off()
SizeTimeCourse <- function(sigclusters, experiment, cluster){
sigtime <- merge(sigclusters, experiment, by.x = "SplitCluster", by.y = "SplitCluster.")
sigtime <- sigtime[, -c(2,3)]
names(sigtime)[2:8] <- c("N010", "N100", "Z001", "Z010", "Z025", "Z050", "Z100")
sigtime_reshaped <- data.frame(SplitCluster = sigtime$SplitCluster,
Size = c(sigtime$N010, sigtime$N100, sigtime$Z001, sigtime$Z010, sigtime$Z025, sigtime$Z050, sigtime$Z100),
Group = c(rep("N010", nrow(sigtime)),
rep("N100", nrow(sigtime)),
rep("Z001", nrow(sigtime)),
rep("Z010", nrow(sigtime)),
rep("Z025", nrow(sigtime)),
rep("Z050", nrow(sigtime)),
rep("Z100", nrow(sigtime))
))
sigtimecluster <- subset(sigtime_reshaped, SplitCluster == cluster)
p <- ggplot(sigtimecluster, aes(x = Group, y = log(Size), group = 1)) + geom_line() + geom_point() + labs(x = "Day", y = "Log(Cluster Size)", title = paste("Time Course of Cluster: ", cluster))
return(p)
}
E4list <- list(E4N010, E4N100, E4Z001, E4Z010, E4Z025, E4Z050, E4Z100)
E4list <- E4list %>% reduce(full_join, by = 'SplitCluster.')
E4list <- E4list[,c(1, 7, 13, 19, 25, 31, 37, 43)]
timecourselist <- list()
pdf("E4Z100vsN100Sig.pdf")
for(cluster in E4Z100vsN100SigClusters$SplitCluster){
timecourselist[[length(timecourselist)+1]] <- SizeTimeCourse(E4Z100vsN100SigClusters, E4list, cluster)
print(SizeTimeCourse(E4Z100vsN100SigClusters, E4list, cluster))
}
dev.off()
timecourselist <- list()
pdf("E4Z010vsN010Sig.pdf")
for(cluster in E4Z010vsN010SigClusters$SplitCluster){
print(SizeTimeCourse(E4Z010vsN010SigClusters, E4list, cluster))
}
dev.off()
timecourselist <- list()
pdf("E4N010vsN100Sig.pdf")
for(cluster in E4N010vsN100SigClusters$SplitCluster){
print(SizeTimeCourse(E4N010vsN100SigClusters, E4list, cluster))
}
dev.off()
E5Z100vsN100SigClusters <- subset(E5Z100vsN100, (pvalue <= 0.01) & (LogClusterSize >=1 | LogClusterSize <=-1))
E5N010vsZ001SigClusters <- subset(E5N010vsZ001, (pvalue <= 0.01) & (LogClusterSize >=1 | LogClusterSize <= -1))
E5Z010vsN010SigClusters <- subset(E5Z010vsN010, (pvalue <= 0.01) & (LogClusterSize >=1 | LogClusterSize <= -1))
E5N100vsN010SigClusters <- subset(E5N100vsN010, (pvalue <= 0.05) & (LogClusterSize >=1 | LogClusterSize <= -1))
E5N010vsN100SigClusters <- subset(E5N010vsN100, (pvalue <= 0.05) & (LogClusterSize >=1 | LogClusterSize <= -1))
E5ValN010Z001 <- (E5ValN010[E5N010vsZ001SigClusters$SplitCluster,])
E5ValZ100N100 <- (E5ValZ100[E5Z100vsN100SigClusters$SplitCluster,])
E5ValZ010N010 <- (E5ValZ010[E5Z010vsN010SigClusters$SplitCluster,])
E5ValN100N010 <- (E5ValN100[E5N100vsN010SigClusters$SplitCluster,])
E5ValN010N100 <- (E5ValN100[E5N010vsN100SigClusters$SplitCluster,])
(head(E5ValN010Z001))
(head(E5ValZ100N100))
(head(E5ValN100N010))
(head(E5ValN010N100))
headernames <- list("FSC-A", "SSC-A", "CCR2", "Ly6G", "CD204", "Ghost510", "Cd11b", "MHCII", "Tim4", "APCeF780", "MerTK", "CD19", "CD73", "Cluster")
colnames(E5ValsMerged) <- headernames
E5ValsMerged
# Z100 vs N100
E5ValsMergedZ100N100 <- merge(E5ValsMerged, E5ValZ100N100, by.x = "Cluster", by.y = "SplitCluster.")
E5ValsMergedZ100N100[,2:18] <- log(E5ValsMergedZ100N100[,2:18])
E5ValsMergedZ100N100 <- na.omit(E5ValsMergedZ100N100)
rownames(E5ValsMergedZ100N100) <- E5ValsMergedZ100N100$Cluster
# N010 vs Z001
E5ValsMergedN010Z001 <- merge(E5ValsMerged, E5ValN010Z001, by.x = "Cluster", by.y = "SplitCluster.")
E5ValsMergedN010Z001[,2:18] <- log(E5ValsMergedN010Z001[,2:18])
E5ValsMergedN010Z001 <- na.omit(E5ValsMergedN010Z001)
rownames(E5ValsMergedN010Z001) <- E5ValsMergedN010Z001$Cluster
# Z010 vs N010
E5ValsMergedZ010N010 <- merge(E5ValsMerged, E5ValZ010N010, by.x = "Cluster", by.y = "SplitCluster.")
E5ValsMergedZ010N010[,2:18] <- log(E5ValsMergedN010Z001[,2:18])
# Z010 vs N010
E5Vals
# Z010 vs N010
E5ValsMerged
# Z010 vs N010
E5ValZ010N010
# Z010 vs N010
E5ValsMergedZ010N010 <- merge(E5ValsMerged, E5ValZ010N010, by.x = "Cluster", by.y = "SplitCluster.")
E5ValsMergedZ010N010[,2:18] <- log(E5ValsMergedN010Z001[,2:18])
# N010 vs Z001
E5ValsMergedN010Z001
headernames <- list("FSC-A", "SSC-A", "CCR2", "Ly6G", "CD204", "Ghost510", "Cd11b", "MHCII", "Tim4", "APCeF780", "MerTK", "CD19", "CD73", "Cluster")
colnames(E5ValsMerged) <- headernames
E5ValsMerged
# Z100 vs N100
E5ValsMergedZ100N100 <- merge(E5ValsMerged, E5ValZ100N100, by.x = "Cluster", by.y = "SplitCluster.")
E5ValsMergedZ100N100[,2:14] <- log(E5ValsMergedZ100N100[,2:14])
E5ValsMergedZ100N100 <- na.omit(E5ValsMergedZ100N100)
rownames(E5ValsMergedZ100N100) <- E5ValsMergedZ100N100$Cluster
# N010 vs Z001
E5ValsMergedN010Z001
E5ValsMergedN010Z001 <- merge(E5ValsMerged, E5ValN010Z001, by.x = "Cluster", by.y = "SplitCluster.")
E5ValsMergedN010Z001[,2:14] <- log(E5ValsMergedN010Z001[,2:14])
E5ValsMergedN010Z001 <- na.omit(E5ValsMergedN010Z001)
rownames(E5ValsMergedN010Z001) <- E5ValsMergedN010Z001$Cluster
# Z010 vs N010
E5ValsMergedZ010N010 <- merge(E5ValsMerged, E5ValZ010N010, by.x = "Cluster", by.y = "SplitCluster.")
E5ValsMergedZ010N010[,2:14] <- log(E5ValsMergedN010Z001[,2:14])
headernames <- list("FSC-A", "SSC-A", "CCR2", "Ly6G", "CD204", "Ghost510", "Cd11b", "MHCII", "Tim4", "APCeF780", "MerTK", "CD19", "CD73", "Cluster")
colnames(E5ValsMerged) <- headernames
E5ValsMerged
# Z100 vs N100
E5ValsMergedZ100N100 <- merge(E5ValsMerged, E5ValZ100N100, by.x = "Cluster", by.y = "SplitCluster.")
E5ValsMergedZ100N100[,2:14] <- log(E5ValsMergedZ100N100[,2:14])
E5ValsMergedZ100N100 <- na.omit(E5ValsMergedZ100N100)
rownames(E5ValsMergedZ100N100) <- E5ValsMergedZ100N100$Cluster
# N010 vs Z001
E5ValsMergedN010Z001
E5ValsMergedN010Z001 <- merge(E5ValsMerged, E5ValN010Z001, by.x = "Cluster", by.y = "SplitCluster.")
E5ValsMergedN010Z001[,2:14] <- log(E5ValsMergedN010Z001[,2:14])
E5ValsMergedN010Z001 <- na.omit(E5ValsMergedN010Z001)
rownames(E5ValsMergedN010Z001) <- E5ValsMergedN010Z001$Cluster
# Z010 vs N010
E5ValsMergedZ010N010 <- merge(E5ValsMerged, E5ValZ010N010, by.x = "Cluster", by.y = "SplitCluster.")
E5ValsMergedZ010N010[,2:14] <- log(E5ValsMergedZ010N010[,2:14])
E5ValsMergedZ010N010 <- na.omit(E5ValsMergedZ010N010)
rownames(E5ValsMergedZ010N010) <- E5ValsMergedZ010N010$Cluster
# N100 vs N010
E5ValsMergedN100N010 <- merge(E5ValsMerged, E5ValN100N010, by.x = "Cluster", by.y = "SplitCluster.")
E5ValsMergedN100N010[,2:14] <- log(E5ValsMergedN100N010[,2:14])
E5ValsMergedN100N010 <- na.omit(E5ValsMergedN100N010)
rownames(E5ValsMergedN100N010) <- E5ValsMergedN100N010$Cluster
pdf("E5Heatmaps.pdf")
pheatmap(E5ValsMergedZ100N100[,8:18], main = "Z100 vs N100")
pheatmap(E5ValsMergedN010Z001[,8:18], main = "N010 vs Z001")
pheatmap(E5ValsMergedZ010N010[,8:18], main = "Z010 vs N010")
pheatmap(E5ValsMergedN100N010[,8:18], main = "N100 vs N010")
E5ValsMergedN100N010
E5list <- list(E5N010, E5N100, E5Z001, E5Z010, E5Z025, E5Z050, E5Z100)
E5list <- list(E5N010, E5N100, E5Z001, E5Z010, E5Z025, E5Z050, E5Z100)
E5list <- E5list %>% reduce(full_join, by = 'SplitCluster.')
E5list <- E5list[,c(1, 7, 13, 19, 25, 31, 37, 43)]
timecourselist <- list()
pdf("E5Z100vsN100Sig.pdf")
for(cluster in E5Z100vsN100SigClusters$SplitCluster){
timecourselist[[length(timecourselist)+1]] <- SizeTimeCourse(E5Z100vsN100SigClusters, E5list, cluster)
print(SizeTimeCourse(E5Z100vsN100SigClusters, E5list, cluster))
}
dev.off()
# Read in CSV Files of E5 Cluster Size for EAch Trial and E5 Cluster Medians
E5SplitClusterSizeTrials <- read.csv("/Users/jonathanyu/Documents/MATLAB/SWIFTV5_20210910/Trial1-10-25-2021-TimeCourseE5/E5All_cct.fcs_Template/E5All_cct.Split_Fractional_Cluster_Sizes.csv")
E5SplitClusterValuesTrials <- read.csv("/Users/jonathanyu/Documents/MATLAB/SWIFTV5_20210910/Trial1-10-25-2021-TimeCourseE5/E5All_cct.fcs_Template/E5All_cct.Split_Medians.csv")
E5
for(group in groups){
assign(paste0("E5", group), selectGroups(group, E5SplitClusterSizeTrials))
}
E5Groups <- list(E5N010, E5N100, E5Z001, E5Z010, E5Z025, E5Z050, E5Z100)
# Create lapply statement or for loop that loops the SumClusterSize Column addition...
# Create SumClusterSize Column in Each E5Group DF
E5N010 <- SumClusterSize(E5N010)
E5N100 <- SumClusterSize(E5N100)
E5Z001 <- SumClusterSize(E5Z001)
E5Z010 <- SumClusterSize(E5Z010)
E5Z025 <- SumClusterSize(E5Z025)
E5Z050 <- SumClusterSize(E5Z050)
E5Z100 <- SumClusterSize(E5Z100)
# Creation of Comparison Dataframes
E5N010vsZ001 <- ComparisonFunction(E5N010, E5Z001)
E5Z001vsN010 <- ComparisonFunction(E5Z001, E5N010)
E5Z001vsZ100 <- ComparisonFunction(E5Z001, E5Z100)
E5N010vsN100 <- ComparisonFunction(E5N010, E5N100)
E5N100vsN010 <- ComparisonFunction(E5N100, E5N010)
E5Z050vsZ100 <- ComparisonFunction(E5Z050, E5Z100)
E5Z100vsN100 <- ComparisonFunction(E5Z100, E5N100)
E5Z010vsN010 <- ComparisonFunction(E5Z010, E5N010)
# Volcanoes
pdf("E5Volcanoes.pdf")
EnhancedVolcano(E5N010vsZ001, lab = rownames(E5N010vsZ001), x = "LogClusterSize", y = "pvalue", title = "N010 vs. Z001", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
EnhancedVolcano(E5Z001vsN010, lab = rownames(E5Z001vsN010), x = "LogClusterSize", y = "pvalue", title = "Z001 vs N010", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
EnhancedVolcano(E5Z001vsZ100, lab = rownames(E5Z001vsZ100), x = "LogClusterSize", y = "pvalue", title = "Z001 vs. Z100", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
EnhancedVolcano(E5N010vsN100, lab = rownames(E5N010vsN100), x = "LogClusterSize", y = "pvalue", title = "N010 vs. N100", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
EnhancedVolcano(E5Z050vsZ100, lab = rownames(E5Z050vsZ100), x = "LogClusterSize", y = "pvalue", title = "Z050 vs. Z100", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
EnhancedVolcano(E5Z100vsN100, lab = rownames(E5Z100vsN100), x = "LogClusterSize", y = "pvalue", title = "Z100 vs. N100", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
dev.off()
EnhancedVolcano(E5N010vsZ001, lab = rownames(E5N010vsZ001), x = "LogClusterSize", y = "pvalue", title = "N010 vs. Z001", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
EnhancedVolcano(E5Z001vsN010, lab = rownames(E5Z001vsN010), x = "LogClusterSize", y = "pvalue", title = "Z001 vs N010", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
EnhancedVolcano(E5Z001vsZ100, lab = rownames(E5Z001vsZ100), x = "LogClusterSize", y = "pvalue", title = "Z001 vs. Z100", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
EnhancedVolcano(E5N010vsN100, lab = rownames(E5N010vsN100), x = "LogClusterSize", y = "pvalue", title = "N010 vs. N100", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
EnhancedVolcano(E5Z050vsZ100, lab = rownames(E5Z050vsZ100), x = "LogClusterSize", y = "pvalue", title = "Z050 vs. Z100", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
EnhancedVolcano(E5Z100vsN100, lab = rownames(E5Z100vsN100), x = "LogClusterSize", y = "pvalue", title = "Z100 vs. N100", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
E5Z100vsN100SigClusters <- subset(E5Z100vsN100, (pvalue <= 0.01) & (LogClusterSize >=1 | LogClusterSize <=-1))
E5N010vsZ001SigClusters <- subset(E5N010vsZ001, (pvalue <= 0.01) & (LogClusterSize >=1 | LogClusterSize <= -1))
E5Z010vsN010SigClusters <- subset(E5Z010vsN010, (pvalue <= 0.01) & (LogClusterSize >=1 | LogClusterSize <= -1))
E5N100vsN010SigClusters <- subset(E5N100vsN010, (pvalue <= 0.05) & (LogClusterSize >=1 | LogClusterSize <= -1))
E5N010vsN100SigClusters <- subset(E5N010vsN100, (pvalue <= 0.05) & (LogClusterSize >=1 | LogClusterSize <= -1))
E5ValN010Z001 <- (E5ValN010[E5N010vsZ001SigClusters$SplitCluster,])
E5ValZ100N100 <- (E5ValZ100[E5Z100vsN100SigClusters$SplitCluster,])
E5ValZ010N010 <- (E5ValZ010[E5Z010vsN010SigClusters$SplitCluster,])
E5ValN100N010 <- (E5ValN100[E5N100vsN010SigClusters$SplitCluster,])
E5ValN010N100 <- (E5ValN100[E5N010vsN100SigClusters$SplitCluster,])
(head(E5ValN010Z001))
(head(E5ValZ100N100))
(head(E5ValN100N010))
(head(E5ValN010N100))
E5N010vsZ001
EnhancedVolcano(E5N010vsZ001, lab = rownames(E5N010vsZ001), x = "LogClusterSize", y = "pvalue", title = "N010 vs. Z001", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
E5N010vsZ001
EnhancedVolcano(E5N010vsZ001, lab = rownames(E5N010vsZ001), x = "LogClusterSize", y = "pvalue", title = "N010 vs. Z001", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
EnhancedVolcano(E5N010vsZ001, lab = rownames(E5N010vsZ001), x = "LogClusterSize", y = "pvalue", title = "N010 vs. Z001", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 5))
EnhancedVolcano(E5N010vsZ001, lab = rownames(E5N010vsZ001), x = "LogClusterSize", y = "pvalue", title = "N010 vs. Z001", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
E5N010vsZ001
E5Z001vsN010
EnhancedVolcano(E5Z001vsN010, lab = rownames(E5Z001vsN010), x = "LogClusterSize", y = "pvalue", title = "Z001 vs N010", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
library(EnhancedVolcano)
library(tidyverse)
library(matrixStats)
library(limma)
library(plotly)
library(DT)
library(pheatmap)
EnhancedVolcano(E4N010vsZ001, lab = rownames(E4N010vsZ001), x = "LogClusterSize", y = "pvalue", title = "N010 vs. Z001", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylab = bquote(~-Log[10] ~ "p-value BH-Corrected"), ylim = c(0, 3))
E4N010vsZ001
EnhancedVolcano(E5N010vsZ001, lab = rownames(E5N010vsZ001), x = "LogClusterSize", y = "pvalue", title = "N010 vs. Z001", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
rownames(E5N010vsZ001)
EnhancedVolcano(E5N010vsN100, lab = rownames(E5N010vsN100), x = "LogClusterSize", y = "pvalue", title = "N010 vs. N100", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
EnhancedVolcano(E5Z100vsN100, lab = rownames(E5Z100vsN100), x = "LogClusterSize", y = "pvalue", title = "Z100 vs. N100", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
EnhancedVolcano(E4Z001vsZ100, lab = rownames(E4Z001vsZ100), x = "LogClusterSize", y = "pvalue", title = "Z001 vs. Z100", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylab = bquote(~-Log[10] ~ "p-value BH-Corrected"), ylim = c(0, 3))
EnhancedVolcano(E4N010vsN100, lab = rownames(E4N010vsN100), x = "LogClusterSize", y = "pvalue", title = "N010 vs. N100", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylab = bquote(~-Log[10] ~ "p-value BH-Corrected"), ylim = c(0, 3))
EnhancedVolcano(E5N010vsZ001, lab = rownames(E5N010vsZ001), x = "LogClusterSize", y = "pvalue", title = "N010 vs. Z001", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3), xlim = c(-5, 5))
EnhancedVolcano(E5Z001vsN010, lab = rownames(E5Z001vsN010), x = "LogClusterSize", y = "pvalue", title = "Z001 vs N010", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
EnhancedVolcano(E5Z001vsN010, lab = rownames(E5Z001vsN010), x = "LogClusterSize", y = "pvalue", title = "Z001 vs N010", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3), xlim = c(-5, 5))
EnhancedVolcano(E5Z001vsZ100, lab = rownames(E5Z001vsZ100), x = "LogClusterSize", y = "pvalue", title = "Z001 vs. Z100", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
EnhancedVolcano(E5N010vsN100, lab = rownames(E5N010vsN100), x = "LogClusterSize", y = "pvalue", title = "N010 vs. N100", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
EnhancedVolcano(E5Z050vsZ100, lab = rownames(E5Z050vsZ100), x = "LogClusterSize", y = "pvalue", title = "Z050 vs. Z100", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
EnhancedVolcano(E5Z050vsZ100, lab = rownames(E5Z050vsZ100), x = "LogClusterSize", y = "pvalue", title = "Z050 vs. Z100", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3), xlim = c(-5, 5))
EnhancedVolcano(E5N010vsN100, lab = rownames(E5N010vsN100), x = "LogClusterSize", y = "pvalue", title = "N010 vs. N100", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
EnhancedVolcano(E5Z100vsN100, lab = rownames(E5Z100vsN100), x = "LogClusterSize", y = "pvalue", title = "Z100 vs. N100", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3))
EnhancedVolcano(E5Z100vsN100, lab = rownames(E5Z100vsN100), x = "LogClusterSize", y = "pvalue", title = "Z100 vs. N100", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3), xlim = c(-5, 5))
EnhancedVolcano(E5Z100vsN100, lab = rownames(E5Z100vsN100), x = "LogClusterSize", y = "pvalue", title = "Z100 vs. N100", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3), xlim = c(-3, 3))
EnhancedVolcano(E5Z100vsN100, lab = rownames(E5Z100vsN100), x = "LogClusterSize", y = "pvalue", title = "Z100 vs. N100", pCutoff = 0.05, xlab = bquote(~Log[10] ~ "Cluster Size A / Cluster Size B"), ylim = c(0, 3), xlim = c(-5, 5))
headernames <- list("FSC-A", "SSC-A", "CCR2", "Ly6G", "CD204", "Ghost510", "Cd11b", "MHCII", "Tim4", "APCeF780", "MerTK", "CD19", "CD73", "Cluster")
colnames(E5ValsMerged) <- headernames
E5ValsMerged
# Z100 vs N100
E5ValsMergedZ100N100 <- merge(E5ValsMerged, E5ValZ100N100, by.x = "Cluster", by.y = "SplitCluster.")
E5ValsMergedZ100N100[,2:14] <- log(E5ValsMergedZ100N100[,2:14])
E5ValsMergedZ100N100 <- na.omit(E5ValsMergedZ100N100)
rownames(E5ValsMergedZ100N100) <- E5ValsMergedZ100N100$Cluster
# N010 vs Z001
E5ValsMergedN010Z001 <- merge(E5ValsMerged, E5ValN010Z001, by.x = "Cluster", by.y = "SplitCluster.")
E5ValsMergedN010Z001[,2:14] <- log(E5ValsMergedN010Z001[,2:14])
E5ValsMergedN010Z001 <- na.omit(E5ValsMergedN010Z001)
rownames(E5ValsMergedN010Z001) <- E5ValsMergedN010Z001$Cluster
# Z010 vs N010
E5ValsMergedZ010N010 <- merge(E5ValsMerged, E5ValZ010N010, by.x = "Cluster", by.y = "SplitCluster.")
E5ValsMergedZ010N010[,2:14] <- log(E5ValsMergedZ010N010[,2:14])
E5ValsMergedZ010N010 <- na.omit(E5ValsMergedZ010N010)
rownames(E5ValsMergedZ010N010) <- E5ValsMergedZ010N010$Cluster
# N100 vs N010
E5ValsMergedN100N010 <- merge(E5ValsMerged, E5ValN100N010, by.x = "Cluster", by.y = "SplitCluster.")
E5ValsMergedN100N010[,2:14] <- log(E5ValsMergedN100N010[,2:14])
E5ValsMergedN100N010 <- na.omit(E5ValsMergedN100N010)
rownames(E5ValsMergedN100N010) <- E5ValsMergedN100N010$Cluster
pdf("E5Heatmaps.pdf")
pheatmap(E5ValsMergedZ100N100[,8:18], main = "Z100 vs N100")
pheatmap(E5ValsMergedN010Z001[,8:18], main = "N010 vs Z001")
pheatmap(E5ValsMergedZ010N010[,8:18], main = "Z010 vs N010")
pheatmap(E5ValsMergedN100N010[,8:18], main = "N100 vs N010")
pheatmap(E5ValsMergedZ100N100[,8:18], main = "Z100 vs N100")
E5ValsMergedZ100N100
pheatmap(E5ValsMergedZ100N100[,2:14], main = "Z100 vs N100")
pheatmap(E5ValsMergedN010Z001[,2:14], main = "N010 vs Z001")
pheatmap(E5ValsMergedZ010N010[,2:14], main = "Z010 vs N010")
pheatmap(E5ValsMergedN100N010[,2:14], main = "N100 vs N010")
E5list <- list(E5N010, E5N100, E5Z001, E5Z010, E5Z025, E5Z050, E5Z100)
E5list <- E5list %>% reduce(full_join, by = 'SplitCluster.')
E5list <- E5list[,c(1, 7, 13, 19, 25, 31, 37, 43)]
timecourselist <- list()
pdf("E5Z100vsN100Sig.pdf")
for(cluster in E5Z100vsN100SigClusters$SplitCluster){
timecourselist[[length(timecourselist)+1]] <- SizeTimeCourse(E5Z100vsN100SigClusters, E5list, cluster)
print(SizeTimeCourse(E5Z100vsN100SigClusters, E5list, cluster))
}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(caret)
library(xgboost)
setwd("~/Documents/GitHub/DS4002Proj2")
file.choose()
Players09 <- read.csv("/Users/jonathanyu/Documents/GitHub/DS4002Proj2/Player Average Stats/2009Players.csv")
file.choose()
Players09 <- read.csv("/Users/jonathanyu/Documents/GitHub/DS4002Proj2/Player Average Stats/2009Players.csv")
Players10 <- read.csv("/Users/jonathanyu/Documents/GitHub/DS4002Proj2/Player Average Stats/2010Players.csv")
Players09 <- read.csv("/Users/jonathanyu/Documents/GitHub/DS4002Proj2/Player Average Stats/2009Players.csv")
Players10 <- read.csv("/Users/jonathanyu/Documents/GitHub/DS4002Proj2/Player Average Stats/2010Players.csv")
Players11 <- read.csv("/Users/jonathanyu/Documents/GitHub/DS4002Proj2/Player Average Stats/2011Players.csv")
Players12 <- read.csv("/Users/jonathanyu/Documents/GitHub/DS4002Proj2/Player Average Stats/2012Players.csv")
Players13 <- read.csv("/Users/jonathanyu/Documents/GitHub/DS4002Proj2/Player Average Stats/2013Players.csv")
Players14 <- read.csv("/Users/jonathanyu/Documents/GitHub/DS4002Proj2/Player Average Stats/2014Players.csv")
Players15 <- read.csv("/Users/jonathanyu/Documents/GitHub/DS4002Proj2/Player Average Stats/2015Players.csv")
Players16 <- read.csv("/Users/jonathanyu/Documents/GitHub/DS4002Proj2/Player Average Stats/2016Players.csv")
Players17 <- read.csv("/Users/jonathanyu/Documents/GitHub/DS4002Proj2/Player Average Stats/2017Players.csv")
Players18 <- read.csv("/Users/jonathanyu/Documents/GitHub/DS4002Proj2/Player Average Stats/2018Players.csv")
Players19 <- read.csv("/Users/jonathanyu/Documents/GitHub/DS4002Proj2/Player Average Stats/2019Players.csv")
Players20 <- read.csv("/Users/jonathanyu/Documents/GitHub/DS4002Proj2/Player Average Stats/2020Players.csv")
Players21 <- read.csv("/Users/jonathanyu/Documents/GitHub/DS4002Proj2/Player Average Stats/2021Players.csv")
Players22 <- read.csv("/Users/jonathanyu/Documents/GitHub/DS4002Proj2/Player Average Stats/2022Players.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(caret)
library(xgboost)
Players09
Players09 <- read.csv("/Users/jonathanyu/Documents/GitHub/DS4002Proj2/Player Average Stats/2009Players.csv", headers = FALSE)
Players09 <- read.csv("/Users/jonathanyu/Documents/GitHub/DS4002Proj2/Player Average Stats/2009Players.csv", header = FALSE)
Players09
playerslist <- list(Players09, Players10, Players11, Players12, Players13, Players14, Players15, Players16, Players17, Players18, Players19, Players20, Players21, Players22)
Players09 <- read.csv("/Users/jonathanyu/Documents/GitHub/DS4002Proj2/Player Average Stats/2009Players.csv")
Players09
Players09 <- read.csv("/Users/jonathanyu/Documents/GitHub/DS4002Proj2/Player Average Stats/2009Players.csv")
Players09
